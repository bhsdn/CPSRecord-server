generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  description String?
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  isActive    Boolean      @default(true) @map("is_active")

  subProjects SubProject[]

  @@map("projects")
}

model SubProject {
  id          Int                 @id @default(autoincrement())
  projectId   Int                 @map("project_id")
  name        String              @db.VarChar(255)
  description String?
  sortOrder   Int                 @default(0) @map("sort_order")
  createdAt   DateTime            @default(now()) @map("created_at")
  updatedAt   DateTime            @updatedAt @map("updated_at")
  isActive    Boolean             @default(true) @map("is_active")

  project      Project             @relation(fields: [projectId], references: [id])
  contents     SubProjectContent[]
  textCommands TextCommand[]

  @@map("sub_projects")
  @@index([projectId])
}

model ContentType {
  id        Int                 @id @default(autoincrement())
  name      String              @unique @db.VarChar(100)
  fieldType String              @map("field_type") @db.VarChar(50)
  hasExpiry Boolean             @default(false) @map("has_expiry")
  isSystem  Boolean             @default(false) @map("is_system")
  createdAt DateTime            @default(now()) @map("created_at")

  contents SubProjectContent[]

  @@map("content_types")
}

model SubProjectContent {
  id            Int       @id @default(autoincrement())
  subProjectId  Int       @map("sub_project_id")
  contentTypeId Int       @map("content_type_id")
  contentValue  String?   @map("content_value")
  expiryDays    Int?      @map("expiry_days")
  expiryDate    DateTime? @map("expiry_date") @db.Date
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  isActive      Boolean   @default(true) @map("is_active")

  subProject  SubProject  @relation(fields: [subProjectId], references: [id])
  contentType ContentType @relation(fields: [contentTypeId], references: [id])

  @@unique([subProjectId, contentTypeId])
  @@map("sub_project_contents")
  @@index([subProjectId])
}

model TextCommand {
  id           Int      @id @default(autoincrement())
  subProjectId Int      @map("sub_project_id")
  commandText  String   @map("command_text")
  expiryDays   Int?     @map("expiry_days")
  expiryDate   DateTime? @map("expiry_date") @db.Date
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  isActive     Boolean  @default(true) @map("is_active")

  subProject SubProject @relation(fields: [subProjectId], references: [id])

  @@map("text_commands")
  @@index([subProjectId])
  @@index([expiryDate])
}
